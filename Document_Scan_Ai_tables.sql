
-- Install tables DOCUMENT_SCAN_AI_CONFIG, DOCUMENT_SCAN_AI_JOBS, DOCUMENT_SCAN_AI_DOCS, DOCUMENT_SCAN_AI_FIELDS, DOCUMENT_SCAN_AI_TABLES
----------------------------------------------------------------
declare 
	v_count NUMBER;
	v_stat VARCHAR2(32767);
begin
	SELECT COUNT(*) INTO v_count
	FROM USER_TABLES WHERE TABLE_NAME = 'DOCUMENT_SCAN_AI_CONFIG';
	if v_count = 0 then 
		v_stat := q'[
CREATE TABLE DOCUMENT_SCAN_AI_CONFIG
(config_id         	 	NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY CONSTRAINT DOCUMENT_SCAN_AI_CONFIG_PK PRIMARY KEY NOT NULL
,input_location_prefix	VARCHAR2(500) DEFAULT ON NULL 'scan_ai_documents'
,output_location_prefix	VARCHAR2(500) DEFAULT ON NULL 'scan_ai_results'
,pdf_location_prefix	VARCHAR2(500) DEFAULT ON NULL 'searchablePdf'
,compartment_id			VARCHAR2(500)
,object_bucket_name		VARCHAR2(500)
,object_namespace_name	VARCHAR2(500)
,object_store_base_url	VARCHAR2(500)
,oci_doc_ai_url			VARCHAR2(500)
,wc_credential_id		VARCHAR2(50)
,cloud_credential_id    VARCHAR2(50)
,currency_character		VARCHAR2(10) DEFAULT ON NULL '€' NOT NULL CHECK (currency_character IN ('€','$'))
,number_character 		VARCHAR2(10) DEFAULT ON NULL '.,' NOT NULL CHECK (number_character IN (',.','.,'))
,processor_language_code VARCHAR2(10) DEFAULT ON NULL 'ENG'
,processor_documentType  VARCHAR2(50) DEFAULT ON NULL 'INVOICE'
,generate_Searchable_Pdf VARCHAR2(1) DEFAULT ON NULL 'Y' NOT NULL CHECK (generate_Searchable_Pdf IN ('N','Y'))
,Key_Values_Extraction	VARCHAR2(1) DEFAULT ON NULL 'Y' NOT NULL CHECK (Key_Values_Extraction IN ('N','Y'))
,Table_Extraction		VARCHAR2(1) DEFAULT ON NULL 'N' NOT NULL CHECK (Table_Extraction IN ('N','Y'))
,execute_asynchronous 	VARCHAR2(1) DEFAULT ON NULL 'Y' NOT NULL CHECK (execute_asynchronous IN ('N','Y'))
,delete_processor_output VARCHAR2(1) DEFAULT ON NULL 'Y' NOT NULL CHECK (delete_processor_output IN ('N','Y'))
,keep_original_files 	VARCHAR2(1) DEFAULT ON NULL 'N' NOT NULL CHECK (keep_original_files IN ('N','Y'))
,is_current_config		VARCHAR2(1) DEFAULT ON NULL 'Y' NOT NULL CHECK (is_current_config IN ('N','Y'))
,configuration_name 	VARCHAR2(255) 
,context_id_query   	VARCHAR2(2000)
,context_fields_query  	VARCHAR2(2000)
,find_address_function	VARCHAR2(2000)
,address_id_query   	VARCHAR2(2000)
,invoice_export_view	VARCHAR2(2000)
,invoice_export_procedure VARCHAR2(2000)
,creation_date       	TIMESTAMP WITH LOCAL TIME ZONE DEFAULT ON NULL CURRENT_TIMESTAMP NOT NULL
,created_by          	VARCHAR2(255) DEFAULT ON NULL NVL(SYS_CONTEXT('APEX$SESSION','APP_USER'),SYS_CONTEXT('USERENV', 'SESSION_USER')) NOT NULL
,last_update_date    	TIMESTAMP WITH LOCAL TIME ZONE DEFAULT ON NULL CURRENT_TIMESTAMP NOT NULL
,last_updated_by     	VARCHAR2(255) DEFAULT ON NULL NVL(SYS_CONTEXT('APEX$SESSION','APP_USER'),SYS_CONTEXT('USERENV', 'SESSION_USER')) NOT NULL)
]';
		EXECUTE IMMEDIATE v_Stat;
		v_stat := 'INSERT INTO DOCUMENT_SCAN_AI_CONFIG(config_id) VALUES (null)';
		EXECUTE IMMEDIATE v_Stat;
		COMMIT;
	end if;
	SELECT COUNT(*) INTO v_count
	FROM USER_TAB_COLUMNS WHERE TABLE_NAME = 'DOCUMENT_SCAN_AI_CONFIG' AND COLUMN_NAME = 'CONTEXT_FIELDS_QUERY';
	if v_count = 0 then 
		v_stat := q'[
		ALTER TABLE DOCUMENT_SCAN_AI_CONFIG ADD
		(
			context_fields_query    VARCHAR2(2000)
		)
		]';
		EXECUTE IMMEDIATE v_Stat;
	end if;
end;
/


declare 
	v_count NUMBER;
	v_stat VARCHAR2(32767);
begin
	SELECT COUNT(*) INTO v_count
	FROM USER_TABLES WHERE TABLE_NAME = 'DOCUMENT_SCAN_AI_JOBS';
	if v_count = 0 then 
		v_stat := q'[
CREATE TABLE DOCUMENT_SCAN_AI_JOBS
(job_id         	 NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY CONSTRAINT DOCUMENT_SCAN_AI_JOBS_PK PRIMARY KEY NOT NULL
,processorJob_ID     VARCHAR2(1024) 
,language_code       VARCHAR2(10)
,documentType  		 VARCHAR2(50)
,lifecycleState      VARCHAR2(100) 
,lifecycleDetails	 VARCHAR2(100) 
,percentComplete	 NUMBER
,ProcessorJob_Details CLOB
,ProcessorJob_Response CLOB
,ProcessorJob_Message VARCHAR2(2000) 
,generate_Searchable_Pdf VARCHAR2(1) DEFAULT ON NULL 'N' NOT NULL CHECK (generate_Searchable_Pdf IN ('N','Y'))
,Key_Value_Extraction VARCHAR2(1) DEFAULT ON NULL 'Y' NOT NULL CHECK (Key_Value_Extraction IN ('N','Y'))
,Table_Extraction 	 VARCHAR2(1) DEFAULT ON NULL 'N' NOT NULL CHECK (Table_Extraction IN ('N','Y'))
,Is_Exported 		 VARCHAR2(1) DEFAULT ON NULL 'N' NOT NULL CHECK (Is_Exported IN ('N','Y'))
,Is_Downloaded 		 VARCHAR2(1) DEFAULT ON NULL 'N' NOT NULL CHECK (Is_Downloaded IN ('N','Y'))
,Is_Cleaned_up		 VARCHAR2(1) DEFAULT ON NULL 'N' NOT NULL CHECK (Is_Cleaned_up IN ('N','Y'))
,Is_Completed		 VARCHAR2(1) DEFAULT ON NULL 'N' NOT NULL CHECK (Is_Completed IN ('N','Y'))
,Context_Id  		 NUMBER
,config_id         	NUMBER DEFAULT ON NULL 1 NOT NULL
,creation_date       TIMESTAMP WITH LOCAL TIME ZONE DEFAULT ON NULL CURRENT_TIMESTAMP NOT NULL
,created_by          VARCHAR2(255) DEFAULT ON NULL NVL(SYS_CONTEXT('APEX$SESSION','APP_USER'),SYS_CONTEXT('USERENV', 'SESSION_USER')) NOT NULL
,last_update_date    TIMESTAMP WITH LOCAL TIME ZONE DEFAULT ON NULL CURRENT_TIMESTAMP NOT NULL
,last_updated_by     VARCHAR2(255) DEFAULT ON NULL NVL(SYS_CONTEXT('APEX$SESSION','APP_USER'),SYS_CONTEXT('USERENV', 'SESSION_USER')) NOT NULL
,CONSTRAINT DOCU_SCAN_AI_JOBS_CONF_FK FOREIGN KEY (config_id) REFERENCES DOCUMENT_SCAN_AI_CONFIG
)
]';
		EXECUTE IMMEDIATE v_Stat;
	end if;
	SELECT COUNT(*) INTO v_count
	FROM USER_TAB_COLUMNS WHERE TABLE_NAME = 'DOCUMENT_SCAN_AI_JOBS' AND COLUMN_NAME = 'IS_COMPLETED';
	if v_count = 0 then 
		v_stat := q'[
		ALTER TABLE DOCUMENT_SCAN_AI_JOBS ADD
		(
			Is_Completed		 VARCHAR2(1) DEFAULT ON NULL 'N' NOT NULL CHECK (Is_Completed IN ('N','Y'))
		)
		]';
		EXECUTE IMMEDIATE v_Stat;
	end if;

end;
/


declare 
	v_count NUMBER;
	v_stat VARCHAR2(32767);
begin
	SELECT COUNT(*) INTO v_count
	FROM USER_TABLES WHERE TABLE_NAME = 'DOCUMENT_SCAN_AI_DOCS';
	if v_count = 0 then 
		v_stat := q'[
CREATE TABLE DOCUMENT_SCAN_AI_DOCS
(document_id         NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY CONSTRAINT DOCUMENT_SCAN_AI_DOCS_PK PRIMARY KEY NOT NULL
,job_id         	 NUMBER NOT NULL
,file_name           VARCHAR2(100)  NOT NULL
,mime_type           VARCHAR2(100)  NOT NULL
,object_store_url    VARCHAR2(1000) 
,doc_ai_json         CLOB
,language_code       VARCHAR2(10)
,language_score      NUMBER
,document_type_code  VARCHAR2(50)
,document_type_score NUMBER
,page_count          NUMBER
,searchable_pdf_url  VARCHAR2(1000)
,ProcessorJob_Message VARCHAR2(2000) 
,index_format		 VARCHAR2(6) DEFAULT ON NULL 'IGNORE' NOT NULL CHECK (index_format in ('BINARY','TEXT','IGNORE'))
,CustomerAddress_ID	NUMBER
,VendorAddress_ID  	NUMBER
,BillingAddress_ID  NUMBER
,ShippingAddress_ID NUMBER
,ServiceAddress_ID	NUMBER
,RemittanceAddress_ID NUMBER
,MerchantAddress_ID	NUMBER
,Total_Amount      NUMBER
,thumbnail_png		 BLOB
,creation_date       TIMESTAMP WITH LOCAL TIME ZONE DEFAULT ON NULL CURRENT_TIMESTAMP NOT NULL
,created_by          VARCHAR2(255) DEFAULT ON NULL NVL(SYS_CONTEXT('APEX$SESSION','APP_USER'),SYS_CONTEXT('USERENV', 'SESSION_USER')) NOT NULL
,last_update_date    TIMESTAMP WITH LOCAL TIME ZONE DEFAULT ON NULL CURRENT_TIMESTAMP NOT NULL
,last_updated_by     VARCHAR2(255) DEFAULT ON NULL NVL(SYS_CONTEXT('APEX$SESSION','APP_USER'),SYS_CONTEXT('USERENV', 'SESSION_USER')) NOT NULL)
		]';
		EXECUTE IMMEDIATE v_Stat;

		v_stat := q'[
CREATE OR REPLACE TRIGGER DOCUMENT_SCAN_AI_DOCS_BU
BEFORE UPDATE ON DOCUMENT_SCAN_AI_DOCS FOR EACH ROW
BEGIN
    :new.last_updated_by  := NVL(SYS_CONTEXT('APEX$SESSION','APP_USER'),SYS_CONTEXT('USERENV', 'SESSION_USER'));
    :new.last_update_date := current_timestamp;
END;
		]';
		EXECUTE IMMEDIATE v_Stat;
	end if;
	
	SELECT COUNT(*) INTO v_count
	FROM USER_CONSTRAINTS WHERE TABLE_NAME = 'DOCUMENT_SCAN_AI_DOCS' AND CONSTRAINT_NAME = 'DOCUMENT_SCAN_AI_DOCS_JOB_FK';
	if v_count = 0 then 
		v_stat := q'[
ALTER TABLE DOCUMENT_SCAN_AI_DOCS ADD CONSTRAINT DOCUMENT_SCAN_AI_DOCS_JOB_FK 
 FOREIGN KEY (job_id) REFERENCES DOCUMENT_SCAN_AI_JOBS (job_id) ON DELETE CASCADE
		]';
		EXECUTE IMMEDIATE v_Stat;

		v_stat := q'[
CREATE INDEX DOCUMENT_SCAN_AI_DOCS_JOB_FKI ON DOCUMENT_SCAN_AI_DOCS (job_id)
		]';
		EXECUTE IMMEDIATE v_Stat;
	end if;

	SELECT COUNT(*) INTO v_count
	FROM USER_TAB_COLUMNS WHERE TABLE_NAME = 'DOCUMENT_SCAN_AI_DOCS' AND COLUMN_NAME = 'THUMBNAIL_PNG';
	if v_count = 0 then 
		v_stat := q'[
		ALTER TABLE DOCUMENT_SCAN_AI_DOCS ADD
		(
			thumbnail_png	BLOB
		)
		]';
		EXECUTE IMMEDIATE v_Stat;
	end if;
end;
/
	
declare 
	v_count NUMBER;
	v_stat VARCHAR2(32767);
begin
	SELECT COUNT(*) INTO v_count
	FROM USER_TABLES WHERE TABLE_NAME = 'DOCUMENT_SCAN_AI_FIELDS';
	if v_count = 0 then 
		v_stat := q'[
CREATE TABLE DOCUMENT_SCAN_AI_FIELDS
(word_id             NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY CONSTRAINT DOCUMENT_SCAN_AI_FIELDS_PK PRIMARY KEY NOT NULL
,document_id         NUMBER NOT NULL
,page_number		 NUMBER
,line_number 		 NUMBER
,column_number 		 NUMBER
,field_type_code     VARCHAR2(50)  NOT NULL
,field_label         VARCHAR2(100)
,label_score         NUMBER
,field_value         VARCHAR2(1000)
,value_type			 VARCHAR2(80)
,field_text			 VARCHAR2(1000)
,field_alias		 VARCHAR2(300)
,user_confirmed	     NUMBER DEFAULT ON NULL 0 NOT NULL 
,user_label 		 VARCHAR2(100)
,creation_date       TIMESTAMP WITH LOCAL TIME ZONE DEFAULT ON NULL CURRENT_TIMESTAMP NOT NULL
,created_by          VARCHAR2(255) DEFAULT ON NULL NVL(SYS_CONTEXT('APEX$SESSION','APP_USER'),SYS_CONTEXT('USERENV', 'SESSION_USER')) NOT NULL
,last_update_date    TIMESTAMP WITH LOCAL TIME ZONE DEFAULT ON NULL CURRENT_TIMESTAMP NOT NULL
,last_updated_by     VARCHAR2(255) DEFAULT ON NULL NVL(SYS_CONTEXT('APEX$SESSION','APP_USER'),SYS_CONTEXT('USERENV', 'SESSION_USER')) NOT NULL)
		]';
		EXECUTE IMMEDIATE v_Stat;

		v_stat := q'[
CREATE OR REPLACE TRIGGER DOCUMENT_SCAN_AI_FIELDS_BU
BEFORE UPDATE ON DOCUMENT_SCAN_AI_FIELDS FOR EACH ROW
BEGIN
    :new.last_updated_by  := NVL(SYS_CONTEXT('APEX$SESSION','APP_USER'),SYS_CONTEXT('USERENV', 'SESSION_USER'));
    :new.last_update_date := CURRENT_TIMESTAMP;
END;
		]';
		EXECUTE IMMEDIATE v_Stat;
	end if;
	
	SELECT COUNT(*) INTO v_count
	FROM USER_TAB_COLUMNS WHERE TABLE_NAME = 'DOCUMENT_SCAN_AI_FIELDS' AND COLUMN_NAME = 'FIELD_ALIAS';
	if v_count = 0 then 
		v_stat := q'[
		ALTER TABLE DOCUMENT_SCAN_AI_FIELDS ADD
		(
			field_alias VARCHAR2(300)
		)
		]';
		EXECUTE IMMEDIATE v_Stat;
	end if;

	SELECT COUNT(*) INTO v_count
	FROM USER_CONSTRAINTS WHERE TABLE_NAME = 'DOCUMENT_SCAN_AI_FIELDS' AND CONSTRAINT_NAME = 'DOCUMENT_SCAN_AI_FLD_DOC_FK';
	if v_count = 0 then 
		v_stat := q'[
ALTER TABLE DOCUMENT_SCAN_AI_FIELDS ADD CONSTRAINT DOCUMENT_SCAN_AI_FLD_DOC_FK 
 FOREIGN KEY (document_id) REFERENCES DOCUMENT_SCAN_AI_DOCS (document_id) ON DELETE CASCADE
		]';
		EXECUTE IMMEDIATE v_Stat;

		v_stat := q'[
CREATE INDEX DOCUMENT_SCAN_AI_FLD_DOC_FKI ON DOCUMENT_SCAN_AI_FIELDS (document_id)
		]';
		EXECUTE IMMEDIATE v_Stat;
	end if;

end;
/

declare 
	v_count NUMBER;
	v_stat VARCHAR2(32767);
begin
	SELECT COUNT(*) INTO v_count
	FROM USER_TABLES WHERE TABLE_NAME = 'DOCUMENT_SCAN_AI_TABLES';
	if v_count = 0 then 
		v_stat := q'[
CREATE TABLE DOCUMENT_SCAN_AI_TABLES (
table_id         	NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY CONSTRAINT DOCUMENT_SCAN_AI_TABLES_PK PRIMARY KEY NOT NULL
,document_id         NUMBER NOT NULL
,page_number		NUMBER(5) NOT NULL
,table_number		NUMBER(5) NOT NULL
,rowCount			NUMBER(5) NOT NULL
,columnCount		NUMBER(5) NOT NULL
,column_names		VARCHAR2(32000), 
CONSTRAINT DOCUMENT_SCAN_AI_TABLES_UK UNIQUE (document_id, page_number, table_number), 
CONSTRAINT DOCUMENT_SCAN_AI_TAB_DOC_FK FOREIGN KEY ("DOCUMENT_ID")
	REFERENCES "DOCUMENT_SCAN_AI_DOCS" ("DOCUMENT_ID") ON DELETE CASCADE)
		]';
		EXECUTE IMMEDIATE v_Stat;
	end if;
end;
/

